---
# Install Ubuntu packages

- name: Update all packages to the latest version
  apt:
    upgrade: dist
  become: true

- name: apt-get update
  apt:
    update_cache: yes
  become: true

- name: Add keys
  apt_key:
    url: "{{ item.url }}"
    id: "{{ item.id }}"
    state: present
  with_items: "{{ repositories.key }}"
  become: true
  when: item.url is defined and item.id is defined

- name: Add keys
  apt_key:
    url: "{{ item.url }}"
    state: present
  with_items: "{{ repositories.key }}"
  become: true
  when: item.url is defined and item.id is undefined

- name: Add keys
  apt_key:
    keyserver: "{{ item.keyserver }}"
    id: "{{ item.id }}"
    state: present
  with_items: "{{ repositories.key }}"
  become: true
  when: item.keyserver is defined

- name: Add PPAs
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items: "{{ repositories.ppa }}"
  become: true

- name: Add additional repos
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items: "{{ repositories.url }}"
  become: true

- name: Install packages
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ packages }}"
  become: true

- name: Install remote packages
  apt:
    deb: "{{ item }}"
  with_items: "{{ remote_packages }}"
  become: true

- include_tasks: tarexe.yml
  with_items: "{{ remote_executables }}"
  when: item.url.endswith("tar.gz") or item.url.endswith("tgz")

- name: Install remote executable
  get_url:
    url: "{{ item.url }}"
    dest: "~/.local/bin/{{ item.name }}"
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
    mode: 0755
  with_items: "{{ remote_executables }}"
  when: not item.url.endswith("tar.gz") and not item.url.endswith("tgz")

- name: Remove useless packages from the cache
  apt:
    autoclean: yes
  become: true

- name: Remove dependencies that are no longer required
  apt:
    autoremove: yes
  become: true
